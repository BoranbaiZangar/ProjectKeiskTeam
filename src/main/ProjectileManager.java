package main;

import javafx.scene.canvas.GraphicsContext;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ProjectileManager {

    private final List<Projectile> projectiles = new ArrayList<>();

    // üîπ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–π–ª—ã (–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, —Å—Ç–µ–Ω—ã)
    private List<Tile> tiles;

    public void setTiles(List<Tile> tiles) {
        this.tiles = tiles;
    }

    public void addProjectile(Projectile p) {
        projectiles.add(p);
    }

    public void updateProjectiles() {
        Iterator<Projectile> iterator = projectiles.iterator();

        while (iterator.hasNext()) {
            Projectile p = iterator.next();
            p.update();

            // –£–¥–∞–ª–∏—Ç—å, –µ—Å–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —ç–∫—Ä–∞–Ω–∞
            if (p.getX() < 0 || p.getX() > Main.WIDTH) {
                iterator.remove();
                continue;
            }

            // üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
            if (tiles != null) {
                for (Tile tile : tiles) {
                    if (tile.getType() == Tile.Type.PLATFORM || tile.getType() == Tile.Type.ICE) {
                        if (tile.getBounds().intersects(p.getBounds())) {
                            iterator.remove(); // —É–¥–∞–ª—è–µ–º –ø—É–ª—é –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏
                            break;
                        }
                    }
                }
            }
        }
    }

    public void render(GraphicsContext gc) {
        for (Projectile p : projectiles) {
            p.render(gc);
        }
    }
}
